name: Build and Deploy

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.16.5"
          channel: "stable"
      - run: flutter pub get
      - run: flutter pub run build_runner build
      - run: cd api && flutter pub get
      - run: cd api && flutter pub run build_runner build
      - run: flutter gen-l10n
      - run: flutter test
  build:
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.16.5"
          channel: "stable"
      - run: flutter pub get
      - run: flutter pub run build_runner build
      - run: cd api && flutter pub get
      - run: cd api && flutter pub run build_runner build
      - run: flutter gen-l10n
      - run: flutter build web
      - uses: montudor/action-zip@v1
        with:
          args: zip -qq -r build.zip build/web
      - uses: actions/upload-artifact@v4
        with:
          name: build
          path: build.zip

  version_bump:
    if: "!startsWith(github.event.head_commit.message, '[RELEASE]')"
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{secrets.PAT}}
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.16.5"
          channel: "stable"
      - run: |
          flutter pub get
          git config --global user.name 'Johannes Jahn'
          git config --global user.email 'johannes.jahn@outlook.com'
          flutter pub run version_bmp -g
          git push
          git push --tags

  deploy:
    if: "startsWith(github.event.head_commit.message, '[RELEASE]')"
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: build
          path: build.zip
      - uses: easingthemes/ssh-deploy@v2.1.5
        env:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
          SOURCE: "build.zip"
          REMOTE_HOST: "chat.johannes-jahn.com"
          REMOTE_USER: "docker"
          TARGET: "chat-api/"
      - uses: appleboy/ssh-action@master
        with:
          host: chat.johannes-jahn.com
          username: docker
          key: ${{ secrets.EC2_SSH_KEY }}
          script: cd chat-api && mv build.zip tmp && mv tmp/build.zip build.zip && rm -rf tmp && unzip build.zip && rm -rf static/* && mv build/web/* static/ && rm -rf build && rm build.zip
